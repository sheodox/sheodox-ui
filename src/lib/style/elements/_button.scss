@use 'sass:math';

button,
button[type='button'],
input[type='submit'],
.button {
	text-decoration: none;
	display: inline-block;
	border-radius: 0.2rem;
	background: none;
	border: none;
	color: var(--sx-text-color);
	cursor: pointer;
	padding: 0.7rem;
	margin: 0.2rem;
	line-height: 1;
	font-weight: 600;
	font-size: 0.9rem;
	transition: color 0.15s, background 0.15s;
	//buttons don't inherit the body's font stack
	font-family: var(--sx-en-fonts);
	letter-spacing: var(--sx-button-letter-spacing);

	&:hover:not(:disabled),
	&.hover {
		background: var(--sx-gray-transparent-light);
	}
	&[aria-pressed='true'] {
		color: white;
		background: var(--sx-gray-transparent);
		> * {
			filter: drop-shadow(0 0 0.5rem);
		}
	}

	&:focus {
		outline: 2px solid var(--sx-input-focus-color);
		outline-offset: 2px;
	}
}

button.primary,
.button.primary {
	background-color: var(--sx-blue-400);
	color: var(--sx-blue-900);

	&:hover:not(:disabled) {
		background-color: var(--sx-blue-300);
	}
}
button.secondary,
.button.secondary {
	background: var(--sx-gray-transparent);
}

button:disabled {
	color: var(--sx-disabled-button-color);
	background: none;
	cursor: auto;
}

button.inverted,
.button.inverted {
	&:not(:disabled) {
		color: var(--sx-blue-700);
		background: var(--sx-gray-25);
	}

	&:hover:not(:disabled) {
		background: white;
	}
}

button.galaxy,
.button.galaxy {
	&:not(:disabled) {
		background: var(--sx-accent-gradient);
		color: white;
		&:hover {
			background: var(--sx-accent-gradient-light);
		}
	}
}

button.electric,
.button.electric {
	&:not(:disabled) {
		background: var(--sx-yellow-300);
		color: var(--sx-yellow-900);
	}

	&:hover:not(:disabled) {
		background: var(--sx-yellow-200);
	}
}

button.danger:not(:disabled) {
	background: var(--sx-red-400);
	color: black;
	&:hover {
		background: var(--sx-red-300);
	}
}

button.small,
.button.small {
	padding: 0.3rem;
}

@keyframes sx-button-ripple {
	from {
		opacity: 0.6;
		transform: scale(0%, 0);
	}
	to {
		opacity: 0;
		transform: scale(1000%, 1000%);
	}
}
.sx-has-ripple {
	overflow: hidden;
	position: relative;
	* {
		pointer-events: none;
	}
}
.sx-button-ripple {
	pointer-events: none;
	transform-origin: center;
	box-shadow: inset 0 0 0.5rem var(--sx-gray-50);
	border-radius: 50%;
	display: inline-block;
	position: absolute;
	z-index: 1;
	animation: sx-button-ripple 0.5s;
	$size: 1;
	$translate: math.div($size, 2);
	height: #{$size}rem;
	width: #{$size}rem;
	top: calc(var(--y) - #{$translate}rem);
	left: calc(var(--x) - #{$translate}rem);
}
